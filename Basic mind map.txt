Mind map for Ux-CRM

The no.of repos we own:
	1. uxos-crm-student-accounts-consumer
	2. crm-student-combined-consumer
	3. downstream-ux-datafix
	4. byjus-batch-jobs
	5. uxos-crm-shipment-consumer
	6. uxos-leadsquared-lead-creation-worker
	7. uxos-student-core-worker



The basic function of each repo:
	1. uxos-crm-student-accounts-consumer:
		1. The main function of this repo is that the it will collect the details of the students from leado-orders, payments, kart and create a record in the students collection in nucleus cluster
		2. The important point to note down is that the orders coming here can be punched either through leado-orders or orderhive
		3. After doing a change we need to deploy the code on our own by using argo-cd. The detailed steps are added below"
			1. need to go to the workflow -> Click on new workflow
			2. Search for docker-publish-workflow
			3. Add the organisation name, repo name, branch name (no need of token and remaining fields)
			4. after submitting open the logs file and check for the token
			5. after we get this token update the buildVersion in the helm/stage/version.yaml (The stage folder changes to main if it is main branch)
		4. Important fields in the orders collection:
			1. campaign Details
			2. lineOrderItems
				1. Parent Order Items
				2. Student order items
			3. SalesOrderItem
			4. capitalFloat Details
			5. nachDetails (What does this mean?)
			6. emiDetails
			7. CustomerDetails
			8. Contact Details
			9. Payment Details (This will be handled by LMS and PTMS)
			10. PaymentForOMS
			11. selectedInventory
			12. mqMessage --> (What does this mqMessage stores? --> it will store the kafka details)
			13. commen
			14. orderType --> its a single field want to know what values it can have
			15. cashBackDetails
			16. createdAt
	2. crm-student-combined-user:
		1. This is the repo where the source is the students collection and we will push this to salesforce.
		2. There are already built sales force internal apis which we use to push the data to the sales force.
		3. Doubt: Are all the sf apis will create a new activity?
		4. Need to understand the no.of sf related apis we are calling in the code
		5. Fields of Students collection:
			1. premiumAccount
			2. academicDetails(Object)
				1.
			3. addressDetails
			4. batchid
			5. bdtPunchedWeek
			6. board
			7. board
			8. byjusWallet
			9. cashbackDetail
			10. classRoomDetails
			11. courseSessionDetails
			12. createdAt
			13. customerId
			14. deviceType
			15. featureTag --> What is this
			16. initialClass 
			17. languagePreference
			18. leadCategory
			19. leadDetails
			20. loanDetails
			21. mandatorySessionCounts
			22. marksStatus (What does this field explains us?)
			23. maxValidity (Based on initial class and maxValidity the program runs I guess)
			24. orderDetails (This is an object in SF)
				1. orderId --> This holds the SSO order Ids
				2. courseType
				3. course
				4. productNames
				5. shipmentTrackingNumber
				6. maxValidity
				7. maxValidityK3
				8. orderValue
				9. orderStatus
				10. omsOrderStatus (What is the difference betweeen orderStatus and omsOrderStatus?)
				11. orderType
				12. orderIdentifier
				13. salesOrder --> This holds the SO order Id 
				14. sfOrderType
				15. isFOC
				16. orderPunchingType
				17. productSelectionType
				18. createdAt
				19. crmReference (Will have referenceId which was created By us and the salesForceID which was created by salesforce)
			25. orderPunchedBy
			26. orderPunchedByRole
			27. orgId
			28. parentEmail
			29. parentMobile
			30. parentName
			31. paymentDetails
				1. 
			32. premiumAccountGenerated  (-----------This field is so important )
			33. proficiency
			34. programDetails
				1. programName
				2. programId
				3. orderId
				4. studentName
				5. programStatus
				6. paymentType
				7. programEnrollmentId (What is programEnrollmentId? -> IT will be different for each customer)
				8. productType
				9. programType
				10. schoolCategory
				11. isTrialProgram
				12. programDuration
				13. noOfSession
				14. classRoomFormat
				15. startDate, End Date
				17. cremReference and SfRefe
			35. salesAppointedBy 
			36. schoolDetails
				1. schoolName
				2. schoolid
				3. schoolAddress
			37. sibilingPremiumAccounts
			38. source (What does this do?)
			39. Studentname, email, mobile etc
			44. tllmsUrl (need to check who update this)
			45. updatedAt
			46. unit
			47. crmReference (Will have referenceId which was created By us and the salesForceID which was created by salesforce)


	3. downstream-ux-datafix:
		1. Most of the times this is useful for updating some of wrong data which flown to Sales force
		2. Here we will just update the Students collection and make it work so that this record will be picked up by the kafka
		3. Here I need to list out the datafixes which are most common:
			1. 
	4. byjus-batch-jobs:
		1. This repo is related to all the batch jobs which were developed by the orders team
		2. In this repo the one which we own are:
			1. jobs-worker/sca-worker
				1. sca-studentclassroomassociation
				2. what is the different between assignsca and unassignsca?
				    assignsca = enroll student 
				    unassignsca = deactivate student

	5. uxos-crm-shipment-consumer
		1. To update the status of the shipment and update in the students collection
		2.







The different types of orders we have:
	1. Order Category/ Order Punching Category
		1. byjus-tlp


	2. Order Type
		1. SPLIT_PARENT --> Need to ask vishal
		2. SPLIT_CHILD

	3. Order Id
		1. SSO (Sales Sub order)
		2. SO (Sales Order)
		3. SHO (shipment Order) (It will be present in the SSO)


The different types of payment we have:
	1. loan/ emi
	2. non-emi


How to punch an order using the KART based url?
	1. We need to use the same link and select a non tablet program for emi based we need to select abfl and the txn id will be provided by the KART team people
